// <auto-generated />
using System;
using Forum.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Forum.Migrations
{
    [DbContext(typeof(ForumContext))]
    [Migration("20220521162358_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Forum.Data.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "1 Comment",
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "2 Comment",
                            PostId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "3 Comment",
                            PostId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Content = "4 Comment",
                            PostId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "5 Comment",
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "6 Comment",
                            PostId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Content = "7 Comment",
                            PostId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "8 Comment",
                            PostId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Content = "9 Comment",
                            PostId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Content = "10 Comment",
                            PostId = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            Content = "11 Comment",
                            PostId = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            Content = "12 Comment",
                            PostId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            Content = "13 Comment",
                            PostId = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            Content = "14 Comment",
                            PostId = 5,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Forum.Data.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(8192)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Our Vacation was amazing .. ",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 782, DateTimeKind.Local).AddTicks(5922),
                            Likes = 3,
                            Title = "Vacation in Sunny beach",
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Content = "Great Time at the beach !",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2743),
                            Likes = 1,
                            Title = "We went to the Golden Sands",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Went skiing to Lake Tahoe last week ,we had a great time",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2767),
                            Likes = 1,
                            Title = "Lake Tahoe visit",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Content = "Super Nice place to stay",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2772),
                            Likes = 1,
                            Title = "Grand Pyramids Hotel",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "Conted Of Fifth Post",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2775),
                            Likes = 1,
                            Title = "Fifth Post",
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Content = "Conted Of Sixth Post",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2779),
                            Likes = 1,
                            Title = "Sixth Post",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            Content = "Conted Of Seventh Post",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2782),
                            Likes = 1,
                            Title = "Seventh Post",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Content = "Conted Of Eight Post",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2785),
                            Likes = 1,
                            Title = "Eight Post",
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Conted Of Ninth Post",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2787),
                            Likes = 1,
                            Title = "Ninth Post",
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Content = "Conted Of Tenth Post",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2791),
                            Likes = 1,
                            Title = "Tenth Post",
                            UserId = 2
                        },
                        new
                        {
                            Id = 11,
                            Content = "Conted Of Eleventh Post",
                            CreatedOn = new DateTime(2022, 5, 21, 19, 23, 57, 784, DateTimeKind.Local).AddTicks(2793),
                            Likes = 1,
                            Title = "Eleventh Post",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Forum.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool>("IsUserBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "vpatova@abv.bg",
                            FirstName = "Valentina",
                            IsUserBlocked = false,
                            LastName = "Patova",
                            Password = "123",
                            PhoneNumber = "555-555-5555",
                            RoleId = 1,
                            Username = "valia"
                        },
                        new
                        {
                            Id = 3,
                            Email = "vi@abv.bg",
                            FirstName = "Valentina",
                            IsUserBlocked = false,
                            LastName = "Iordanova",
                            Password = "123",
                            PhoneNumber = "777-777-7777",
                            RoleId = 2,
                            Username = "valia2"
                        },
                        new
                        {
                            Id = 2,
                            Email = "mivanov@abv.bg",
                            FirstName = "Miroslav",
                            IsUserBlocked = false,
                            LastName = "Ivanov",
                            Password = "123",
                            PhoneNumber = "666-666-6666",
                            RoleId = 2,
                            Username = "miro"
                        });
                });

            modelBuilder.Entity("Forum.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "user"
                        });
                });

            modelBuilder.Entity("Forum.Data.Models.Comment", b =>
                {
                    b.HasOne("Forum.Data.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Forum.Data.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum.Data.Models.Post", b =>
                {
                    b.HasOne("Forum.Data.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Forum.Data.Models.User", b =>
                {
                    b.HasOne("Forum.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Forum.Data.Models.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Forum.Data.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Forum.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
